package Lab5.task7;

import java.util.Random;
import java.util.Scanner;

public class Task7 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        double balance = 100;

        System.out.println("–í—ñ—Ç–∞—é! –¶–µ –≥—Ä–∞ –°–ª–æ—Ç-–º–∞—à–∏–Ω–∞!");
        System.out.println("–ú–æ–∂–ª–∏–≤—ñ —Å–∏–º–≤–æ–ª–∏: üçí (–≤–∏—à–Ω—è), üçã (–ª–∏–º–æ–Ω), üçä (–º–∞–Ω–¥–∞—Ä–∏–Ω), üèÜ (–∫—É–±–æ–∫), ‚öì (—è–∫—ñ—Ä)");
        System.out.println("–ü—Ä–∞–≤–∏–ª–∞:");
        System.out.println(" - 3 –æ–¥–Ω–∞–∫–æ–≤–∏—Ö —Å–∏–º–≤–æ–ª–∏ = —Å—Ç–∞–≤–∫–∞ –º–Ω–æ–∂–∏—Ç—å—Å—è: üçí*5, üçã*6, üçä*7, üèÜ*10, ‚öì*12");
        System.out.println(" - 2 –æ–¥–Ω–∞–∫–æ–≤–∏—Ö —Å–∏–º–≤–æ–ª–∏ = —Å—Ç–∞–≤–∫–∞ –º–Ω–æ–∂–∏—Ç—å—Å—è: üçí*2, üçã*2, üçä*3, üèÜ*4, ‚öì*5");
        System.out.println("–ü–æ—á–∞—Ç–∫–æ–≤–∏–π –±–∞–ª–∞–Ω—Å: $100\n");

        while (balance > 0) {
            System.out.println("–í–∞—à –±–∞–ª–∞–Ω—Å: $" + balance);
            System.out.print("–í–≤–µ–¥—ñ—Ç—å —Å—Ç–∞–≤–∫—É: ");
            int bet = scanner.nextInt();

            if (bet > balance) {
                System.out.println("–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∫–æ—à—Ç—ñ–≤ –¥–ª—è —Å—Ç–∞–≤–∫–∏!");
                continue;
            } else if (bet <= 0) {
                System.out.println("–°—Ç–∞–≤–∫–∞ –º–∞—î –±—É—Ç–∏ –±—ñ–ª—å—à–æ—é –∑–∞ 0!");
                continue;
            }

            balance -= bet;
            System.out.println("–û–±–µ—Ä—Ç–∞—î–º–æ –±–∞—Ä–∞–±–∞–Ω–∏...");

            String[] row = spinRow();
            printRow(row);

            int payout = getPayout(row, bet);
            if (payout > 0) {
                balance += payout;
                System.out.println("–í–∏ –≤–∏–≥—Ä–∞–ª–∏ $" + payout + "!");
            } else {
                System.out.println("–í–∏ –ø—Ä–æ–≥—Ä–∞–ª–∏ —Ü—é —Å—Ç–∞–≤–∫—É.");
            }

            if (balance <= 0) {
                System.out.println("–í–∞—à –±–∞–ª–∞–Ω—Å –¥–æ—Ä—ñ–≤–Ω—é—î –Ω—É–ª—é. –ì—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.");
                break;
            }

            System.out.print("–ë–∞–∂–∞—î—Ç–µ –∑—ñ–≥—Ä–∞—Ç–∏ —â–µ —Ä–∞–∑? (Y/N): ");
            String answer = scanner.next();
            if (!answer.equalsIgnoreCase("Y")) {
                System.out.println("–î—è–∫—É—é –∑–∞ –≥—Ä—É! –í–∞—à —Ñ—ñ–Ω–∞–ª—å–Ω–∏–π –±–∞–ª–∞–Ω—Å: $" + balance);
                break;
            }
        }

        scanner.close();
    }

    static String[] spinRow() {
        String[] symbols = {"üçí", "üçã", "üçä", "üèÜ", "‚öì"};
        String[] result = new String[3];
        Random random = new Random();
        for (int i = 0; i < 3; i++) {
            result[i] = symbols[random.nextInt(symbols.length)];
        }
        return result;
    }

    static void printRow(String[] row) {
        System.out.println("***********************");
        System.out.println("| " + row[0] + " | " + row[1] + " | " + row[2] + " |");
        System.out.println("***********************");
    }

    static int getPayout(String[] row, int bet) {
        String a = row[0], b = row[1], c = row[2];

        int threeMatch = switch (a) {
            case "üçí" -> 5;
            case "üçã" -> 6;
            case "üçä" -> 7;
            case "üèÜ" -> 10;
            case "‚öì" -> 12;
            default -> 0;
        };

        int twoMatch = switch (a) {
            case "üçí", "üçã" -> 2;
            case "üçä" -> 3;
            case "üèÜ" -> 4;
            case "‚öì" -> 5;
            default -> 0;
        };

        if (a.equals(b) && a.equals(c)) {
            return bet * threeMatch;
        } else if (a.equals(b) || a.equals(c) || b.equals(c)) {
            String match = a.equals(b) || a.equals(c) ? a : b;
            int coeff = switch (match) {
                case "üçí", "üçã" -> 2;
                case "üçä" -> 3;
                case "üèÜ" -> 4;
                case "‚öì" -> 5;
                default -> 0;
            };
            return bet * coeff;
        }

        return 0;
    }
}
